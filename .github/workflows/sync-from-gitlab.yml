name: Update from Gitlab

on:
  push:
    tags:
      - 'v*'  # 仅在创建标签时触发，例如 v1.0, v2.1.0 等

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: sync-branch-builder6
        uses: wei/git-sync@v3
        with:
          source_repo: https://${{secrets.ADMIN_ACCOUNT_GITLAB}}:${{secrets.ADMIN_PASSWORD_GITLAB}}@gitlab.steedos.cn/steedos/builder6
          source_branch: 'main'
          destination_repo: https://${{secrets.ADMIN_ACCOUNT_GITHUB}}:${{secrets.ADMIN_PASSWORD_GITHUB}}@github.com/steedos/builder6
          destination_branch: 'main'
          exclude: version.json
              
      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
      - name: Update docker-version in version.json
        run: |
          VERSION=$(echo "${{ env.VERSION }}" | sed 's/^v//')
          jq --arg version "$VERSION" '.["docker-version"] = $version' version.json > tmp.$$.json && mv tmp.$$.json version.json
      
      - name: Commit changes
        run: |
          git config --global user.name ${{ secrets.ADMIN_ACCOUNT_GITHUB }}
          git config --global user.email ${{ secrets.ADMIN_ACCOUNT_GITHUB_EMAIL }}
          git add version.json
          git commit -m "Update version to ${{ env.VERSION }}"
      
      - name: Pull latest changes and push the new commit
        run: |
          git fetch origin
          git rebase origin/main || (git rebase --abort && exit 1)
          
          # Handle merge conflicts by keeping their changes
          if [ -n "$(git ls-files -u)" ]; then
            git ls-files -u | cut -f 2 | sort -u | xargs git checkout --theirs --
            git add $(git ls-files -u | cut -f 2 | sort -u)
            git rebase --continue
          fi
          
          git push origin HEAD:refs/heads/main --force
